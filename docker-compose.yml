version: '3.9'

networks:
  default :
    name: 'obg'

volumes : 
  obg-pg:    
  obg-logs:
  obg-os:  
  obg-prom:
  obg-grafana:
  
services:
  postgres:
    container_name: 'obg-pg'
    image: 'postgres:latest'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: 'admin'
    volumes:
      - obg-pg:/var/lib/postgresql/data
     
  prometheus:
    container_name: "obg-prom"
    image: "prom/prometheus"
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - obg-prom:/prometheus

  loki:
    container_name: 'obg-loki'
    image: 'grafana/loki'
    ports:
      - '3100:3100'
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yml
    command: --config.file=/etc/loki/local-config.yml 


  grafana:
    container_name: 'obg-grafana'
    image: 'grafana/grafana'
    restart: unless-stopped
    environment :
      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource'
    volumes:
      - obg-grafana:/var/lib/grafana
    ports:
      - '3000:3000'
    depends_on: 
      - prometheus

  jaeger:
    container_name: 'obg-jaeger'
    image: 'jaegertracing/all-in-one:1.9'
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    ports:
      - '5775:5775/udp'
      - '6831:6831/udp'
      - '6832:6832/udp'
      - '5778:5778'
      - '16686:16686'
      - '9411:9411'  
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: obg-zk
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka-broker:
    image: confluentinc/cp-kafka:7.6.0
    container_name: obg-kb
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: obg-zk:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://obg-kb:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
    depends_on:
      - zookeeper

  kafka-connect:
    image: kafka-connect-jdbc:local
    build:
      context: ./kafka-connect
    container_name: obg-jdbc-connect
    ports:
      - '8083:8083'
    depends_on:
      - kafka-broker


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: obg-kui
    ports:
      - '8082:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: local-docker
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: obg-kb:29092
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: domain-events-outbox
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://obg-jdbc-connect:8083
    depends_on:
      - kafka-broker
      - kafka-connect


  # api:
  #   build:
  #     context: .
  #   container_name: 'obg-api'
  #   ports:
  #     - '8080:8080'
  #   environment:
  #     ASPNET_URLS: 'http://0.0.0.0:8080'
  #     ConnectionStrings__Postgres: 'User ID=postgres;Password=admin;Host=obg-pg;Port=5432;Database=obg;Pooling=true;MinPoolSize=0;MaxPoolSize=100;Connection Idle Lifetime=60;'
  #     ConnectionStrings__Logs: 'http://obg-loki:3100'
  #     ConnectionStrings__Tracing: 'http://obg-jaeger:14268/api/traces'

